"""add model

Revision ID: 14ad387cfb4d
Revises: 51e8ee936fc5
Create Date: 2025-09-12 18:58:35.358678

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '14ad387cfb4d'
down_revision: Union[str, None] = '51e8ee936fc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('block_number', sa.BigInteger(), nullable=False),
    sa.Column('block_timestamp', sa.String(), nullable=False),
    sa.Column('tx_index', sa.Integer(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=False),
    sa.Column('from_address', sa.String(), nullable=False),
    sa.Column('to_address', sa.String(), nullable=True),
    sa.Column('value_wei', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('gas_used', sa.BigInteger(), nullable=True),
    sa.Column('gas_price_wei', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('effective_gas_price_wei', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id', 'tx_hash', name='uq_transactions_chain_txhash')
    )
    op.create_index('idx_transactions_chain_block', 'transactions', ['chain_id', 'block_number'], unique=False)
    op.create_index('idx_transactions_from', 'transactions', ['chain_id', 'from_address'], unique=False)
    op.create_index('idx_transactions_to', 'transactions', ['chain_id', 'to_address'], unique=False)
    op.create_index(op.f('ix_transactions_chain_id'), 'transactions', ['chain_id'], unique=False)
    op.create_table('swaps',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('defi_pool_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('log_index', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(), nullable=True),
    sa.Column('recipient', sa.String(), nullable=True),
    sa.Column('amount0_in_raw', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('amount1_in_raw', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('amount0_out_raw', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('amount1_out_raw', sa.Numeric(precision=78, scale=0), nullable=False),
    sa.Column('sqrt_price_x96', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('liquidity_raw', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('tick', sa.Integer(), nullable=True),
    sa.Column('base_token_id', sa.Integer(), nullable=True),
    sa.Column('base_is_token0', sa.Boolean(), nullable=True),
    sa.Column('direction', sa.SmallInteger(), nullable=True),
    sa.Column('block_number', sa.BigInteger(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['base_token_id'], ['tokens.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['defi_pool_id'], ['defi_pools.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tx_hash', 'log_index', name='uq_swaps_txhash_logindex')
    )
    op.create_index('idx_swaps_base_direction', 'swaps', ['base_token_id', 'direction'], unique=False)
    op.create_index('idx_swaps_chain_block', 'swaps', ['chain_id', 'block_number'], unique=False)
    op.create_index('idx_swaps_pool_block', 'swaps', ['defi_pool_id', 'block_number'], unique=False)
    op.create_index('idx_swaps_recipient', 'swaps', ['chain_id', 'recipient'], unique=False)
    op.create_index('idx_swaps_sender', 'swaps', ['chain_id', 'sender'], unique=False)
    op.create_index(op.f('ix_swaps_base_token_id'), 'swaps', ['base_token_id'], unique=False)
    op.create_index(op.f('ix_swaps_chain_id'), 'swaps', ['chain_id'], unique=False)
    op.create_index(op.f('ix_swaps_defi_pool_id'), 'swaps', ['defi_pool_id'], unique=False)
    op.create_index(op.f('ix_swaps_transaction_id'), 'swaps', ['transaction_id'], unique=False)
    op.create_table('sandwich_attacks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('front_attack_swap_id', sa.Integer(), nullable=False),
    sa.Column('victim_swap_id', sa.Integer(), nullable=False),
    sa.Column('back_attack_swap_id', sa.Integer(), nullable=False),
    sa.Column('attacker_address', sa.String(), nullable=False),
    sa.Column('victim_address', sa.String(), nullable=True),
    sa.Column('base_token_id', sa.Integer(), nullable=True),
    sa.Column('victim_base_size_raw', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('profit_base_raw', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('profit_base', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('harm_base_raw', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('harm_base', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('gas_fee_wei_attacker', sa.Numeric(precision=78, scale=0), nullable=True),
    sa.Column('gas_fee_eth_attacker', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('gas_fee_usd_attacker', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('gas_fee_eth_total', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('gas_fee_usd_total', sa.Numeric(precision=38, scale=18), nullable=True),
    sa.Column('detected_by', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['back_attack_swap_id'], ['swaps.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['base_token_id'], ['tokens.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['front_attack_swap_id'], ['swaps.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['victim_swap_id'], ['swaps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('front_attack_swap_id', 'victim_swap_id', 'back_attack_swap_id', name='uq_sandwich_triplet')
    )
    op.create_index('idx_sandwich_attacker', 'sandwich_attacks', ['attacker_address'], unique=False)
    op.create_index('idx_sandwich_chain', 'sandwich_attacks', ['chain_id'], unique=False)
    op.create_index('idx_sandwich_victim', 'sandwich_attacks', ['victim_address'], unique=False)
    op.create_index(op.f('ix_sandwich_attacks_back_attack_swap_id'), 'sandwich_attacks', ['back_attack_swap_id'], unique=False)
    op.create_index(op.f('ix_sandwich_attacks_base_token_id'), 'sandwich_attacks', ['base_token_id'], unique=False)
    op.create_index(op.f('ix_sandwich_attacks_chain_id'), 'sandwich_attacks', ['chain_id'], unique=False)
    op.create_index(op.f('ix_sandwich_attacks_front_attack_swap_id'), 'sandwich_attacks', ['front_attack_swap_id'], unique=False)
    op.create_index(op.f('ix_sandwich_attacks_victim_swap_id'), 'sandwich_attacks', ['victim_swap_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sandwich_attacks_victim_swap_id'), table_name='sandwich_attacks')
    op.drop_index(op.f('ix_sandwich_attacks_front_attack_swap_id'), table_name='sandwich_attacks')
    op.drop_index(op.f('ix_sandwich_attacks_chain_id'), table_name='sandwich_attacks')
    op.drop_index(op.f('ix_sandwich_attacks_base_token_id'), table_name='sandwich_attacks')
    op.drop_index(op.f('ix_sandwich_attacks_back_attack_swap_id'), table_name='sandwich_attacks')
    op.drop_index('idx_sandwich_victim', table_name='sandwich_attacks')
    op.drop_index('idx_sandwich_chain', table_name='sandwich_attacks')
    op.drop_index('idx_sandwich_attacker', table_name='sandwich_attacks')
    op.drop_table('sandwich_attacks')
    op.drop_index(op.f('ix_swaps_transaction_id'), table_name='swaps')
    op.drop_index(op.f('ix_swaps_defi_pool_id'), table_name='swaps')
    op.drop_index(op.f('ix_swaps_chain_id'), table_name='swaps')
    op.drop_index(op.f('ix_swaps_base_token_id'), table_name='swaps')
    op.drop_index('idx_swaps_sender', table_name='swaps')
    op.drop_index('idx_swaps_recipient', table_name='swaps')
    op.drop_index('idx_swaps_pool_block', table_name='swaps')
    op.drop_index('idx_swaps_chain_block', table_name='swaps')
    op.drop_index('idx_swaps_base_direction', table_name='swaps')
    op.drop_table('swaps')
    op.drop_index(op.f('ix_transactions_chain_id'), table_name='transactions')
    op.drop_index('idx_transactions_to', table_name='transactions')
    op.drop_index('idx_transactions_from', table_name='transactions')
    op.drop_index('idx_transactions_chain_block', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###
