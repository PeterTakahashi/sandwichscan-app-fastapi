"""init

Revision ID: 686cbc2b9ddd
Revises: 
Create Date: 2025-09-11 09:37:11.939020

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '686cbc2b9ddd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chains',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('native_symbol', sa.String(), nullable=False),
    sa.Column('native_decimals', sa.Integer(), nullable=False),
    sa.Column('rpc_url', sa.String(), nullable=False),
    sa.Column('usd_stable_coin_address', sa.String(), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('defis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('defi_versions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('defi_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['defi_id'], ['defis.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_defi_versions_defi_id'), 'defi_versions', ['defi_id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token_type', sa.Enum('ERC20', 'NATIVE', name='tokentype'), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id', 'address', name='uq_tokens_chain_address')
    )
    op.create_index(op.f('ix_tokens_chain_id'), 'tokens', ['chain_id'], unique=False)
    op.create_table('defi_factories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('defi_version_id', sa.Integer(), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['defi_version_id'], ['defi_versions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id', 'address', name='uq_defi_factories_chain_address')
    )
    op.create_index(op.f('ix_defi_factories_chain_id'), 'defi_factories', ['chain_id'], unique=False)
    op.create_index(op.f('ix_defi_factories_defi_version_id'), 'defi_factories', ['defi_version_id'], unique=False)
    op.create_table('defi_pools',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('defi_factory_id', sa.Integer(), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('token0_id', sa.Integer(), nullable=False),
    sa.Column('token1_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('created_block_number', sa.BigInteger(), nullable=False),
    sa.Column('created_tx_hash', sa.String(), nullable=False),
    sa.Column('tick_spacing', sa.Integer(), nullable=False),
    sa.Column('fee_tier_bps', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chain_id'], ['chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['defi_factory_id'], ['defi_factories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token0_id'], ['tokens.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token1_id'], ['tokens.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chain_id', 'address', name='uq_defi_pools_chain_address')
    )
    op.create_index(op.f('ix_defi_pools_chain_id'), 'defi_pools', ['chain_id'], unique=False)
    op.create_index(op.f('ix_defi_pools_defi_factory_id'), 'defi_pools', ['defi_factory_id'], unique=False)
    op.create_index(op.f('ix_defi_pools_token0_id'), 'defi_pools', ['token0_id'], unique=False)
    op.create_index(op.f('ix_defi_pools_token1_id'), 'defi_pools', ['token1_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_defi_pools_token1_id'), table_name='defi_pools')
    op.drop_index(op.f('ix_defi_pools_token0_id'), table_name='defi_pools')
    op.drop_index(op.f('ix_defi_pools_defi_factory_id'), table_name='defi_pools')
    op.drop_index(op.f('ix_defi_pools_chain_id'), table_name='defi_pools')
    op.drop_table('defi_pools')
    op.drop_index(op.f('ix_defi_factories_defi_version_id'), table_name='defi_factories')
    op.drop_index(op.f('ix_defi_factories_chain_id'), table_name='defi_factories')
    op.drop_table('defi_factories')
    op.drop_index(op.f('ix_tokens_chain_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_defi_versions_defi_id'), table_name='defi_versions')
    op.drop_table('defi_versions')
    op.drop_table('defis')
    op.drop_table('chains')
    # ### end Alembic commands ###
